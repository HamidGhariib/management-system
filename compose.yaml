services:
  rabbitmq:
    image: 'rabbitmq:3.13-management-alpine'
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - rabbitmq_net

  docker-mysql:
    image: 'mysql:8.3.0'
    environment:
      - 'MYSQL_DATABASE=managementsystem'
      - 'MYSQL_PASSWORD=Hamid72'
      - 'MYSQL_ROOT_PASSWORD=123456'
      - 'MYSQL_USER=hamid'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    networks:
      - mysql_net

  gateway-system:
    container_name: gateway-system-app
    image: gateway-system-app
    build: gateway-system
    ports:
      - "8030:8030"
    environment:
      - "spring.datasource.url=jdbc:mysql://docker-mysql:3306/managementsystem?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true"
    networks:
      - gateway_net
      - inventory_net
      - order_net
      - shipping_net
      - mysql_net
    depends_on:
      docker-mysql:
        condition: service_healthy

  order-system:
    container_name: order-system-app
    image: order-system-app
    build: order-system
    ports:
      - "8060:8060"
    environment:
      - "spring.datasource.url=jdbc:mysql://docker-mysql:3306/managementsystem?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true"
    networks:
      - order_net
      - mysql_net
      - rabbitmq_net
      - gateway_net
    depends_on:
      docker-mysql:
        condition: service_healthy
      gateway-system:
        condition: service_started

  shipping-system:
    container_name: shipping-system-app
    image: shipping-system-app
    build: shipping-system
    ports:
      - "8040:8040"
    environment:
      - "spring.datasource.url=jdbc:mysql://docker-mysql:3306/managementsystem?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true"
      - "spring.rabbitmq.host=rabbitmq"
    networks:
      - shipping_net
      - mysql_net
      - rabbitmq_net
      - gateway_net
    depends_on:
      docker-mysql:
        condition: service_healthy
      gateway-system:
        condition: service_started

  inventory-system:
    container_name: inventory-system-app
    image: inventory-system-app
    build: inventory-system
    ports:
      - "8090:8090"
    environment:
      - "spring.datasource.url=jdbc:mysql://docker-mysql:3306/managementsystem?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true"
    networks:
      - inventory_net
      - mysql_net
      - rabbitmq_net
      - gateway_net
    depends_on:
      docker-mysql:
        condition: service_healthy
      gateway-system:
        condition: service_started

networks:
  rabbitmq_net:
    driver: bridge
  mysql_net:
    driver: bridge
  gateway_net:
    driver: bridge
  order_net:
    driver: bridge
  shipping_net:
    driver: bridge
  inventory_net:
    driver: bridge